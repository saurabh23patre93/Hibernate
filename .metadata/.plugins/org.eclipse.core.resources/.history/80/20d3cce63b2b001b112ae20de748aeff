package com.nt.dao;

import java.util.List;

import javax.persistence.Query;

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;

import com.nt.entity.Department;
import com.nt.entity.EmpDetails;
import com.nt.utility.HibernateUtil;

public class ManyToOneDaoImp implements ManyToOneDao {

	@Override
	public void saveDataUsingChild() {
		//Get Session Object
		Session ses=HibernateUtil.getSession();
		Transaction tx=null;
		boolean flag=false;
		try {
			if(!ses.getTransaction().isActive())
				tx=ses.beginTransaction();
			//Prepare Objects
			//child object
			EmpDetails emp1=new EmpDetails("Raja","hyd", 9000.0f);
			EmpDetails emp2=new EmpDetails("Rajesh","vizag", 79993.0f);
			EmpDetails emp3=new EmpDetails("Suresh","delhi",70000.0f);
			//Parent obj
			Department dept=new Department("IT","Mumbai",10);
			//Set parent obj to multiple chail obj
			emp1.setDept(dept);emp2.setDept(dept);emp3.setDept(dept);
			//Save Child obj
			ses.save(emp1);ses.save(emp2);ses.save(emp3);
			flag=true;
		} catch (HibernateException e) {
			flag=false;
			e.printStackTrace();
		}
		finally {
			//perform Tx mgmt
			if(flag) {
				tx.commit();
				System.out.println("Objects are save (many to one)");
			}
			else {
				tx.rollback();
				System.out.println("Objects are not save (many to one)");
			}
			//close sessionfactory
			HibernateUtil.closeSessionFactory();
		}//finally

	}
	
	@Override
	public void loadDataUsingChild() {
		//Get Session
		Session ses=HibernateUtil.getSession();
		Transaction tx=null;
		try {
			if(!ses.getTransaction().isActive())
				tx=ses.beginTransaction();
			//Load Object
			Query query=ses.createQuery("from EmpDetails");
			List<EmpDetails> list=query.getResultList();
			list.forEach(emp->{
				System.out.println("Child ::"+emp.getEno()+" "+emp.getEname()+" "+emp.getEadd()+" "+emp.getSalary());
				//Get Associated parent object
				Department dept=emp.getDept();
				System.out.println("Parent ::"+dept.getDno()+" "+dept.getDname()+" "+dept.getLocation()+" "+dept.getCapacity());
			});
		} catch (HibernateException e) {
			e.printStackTrace();
		}
	}

}
